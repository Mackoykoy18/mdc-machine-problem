<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
    <context:property-placeholder location="mdc-machine-problem.properties"/>
    <configuration defaultExceptionStrategy-ref="implementationChoice_Exception_Strategy" doc:name="Configuration">
        <http:config useTransportForUris="false"/>
    </configuration>
    <db:mysql-config name="MySQL_Configuration" host="${db.host}" port="${db.port}" user="${db.user}" password="${db.password}" database="${db.database}" doc:name="MySQL Configuration"/>
    <flow name="noActiveUser/s">
        <set-payload value="{    &quot;message&quot;:&quot;user not found&quot;,    &quot;errorCode&quot;: 404 }" doc:name="Set Payload"/>
        <set-property propertyName="http.status" value="404" doc:name="Property"/>
    </flow>
    <sub-flow name="headerValidationSubflow">
        <validation:is-true  expression="#[message.inboundProperties.client_id=='johnmacksamson18']" doc:name="Validation"/>
    </sub-flow>
    <flow name="getUserFlow">
        <flow-ref name="headerValidationSubflow" doc:name="headerValidationSubflow"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Get User">
            <db:parameterized-query><![CDATA[SELECT User_Details.user_name ,User_Details.full_name , User_Details.gender, User_Details.birthday , User_Details.date_registered 
FROM User_Details INNER JOIN Account on User_Details.userId = Account.userId
WHERE User_Details.user_name = #[flowVars.userName] and Account.active = 1]]></db:parameterized-query>
        </db:select>
        <choice doc:name="Choice">
            <when expression="#[payload.isEmpty()]">
                <flow-ref name="noActiveUser/s" doc:name="noActiveUser"/>
            </when>
            <otherwise>
                <dw:transform-message doc:name="Transform Message" metadata:id="adb69784-2986-4163-84b9-b60ffe88fb42">
                    <dw:input-payload/>
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%var presentYear = now.year
%var presentMonth = now.month
%var presentDay = now.day
---
payload map ((payload01 , indexOfPayload01) -> {
	"userName": payload01.user_name,
	"fullName": payload01.full_name,
	"age" : presentYear - payload01.birthday.year
			when presentMonth >= payload01.birthday.month and presentDay >= payload01.birthday.day
			otherwise presentYear - payload01.birthday.year - 1,
	"gender": "Male" when payload01.gender == 'M' otherwise "Female",
	"dateRegistered": payload01.date_registered as :datetime {format: "dd-MM-yyyy"}
})]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getUsersFlow">
        <flow-ref name="headerValidationSubflow" doc:name="headerValidationSubflow"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Get Users">
            <db:parameterized-query><![CDATA[SELECT User_Details.user_name ,User_Details.full_name , User_Details.gender, User_Details.birthday , User_Details.date_registered 
FROM User_Details INNER JOIN Account on User_Details.userId = Account.userId
WHERE Account.active = 1]]></db:parameterized-query>
        </db:select>
        <choice doc:name="Choice">
            <when expression="#[payload.isEmpty()]">
                <flow-ref name="noActiveUser/s" doc:name="noActiveUsers"/>
            </when>
            <otherwise>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%var presentYear = now.year
%var presentMonth = now.month
%var presentDay = now.day
---
payload map ((payload01 , indexOfPayload01) -> {
	"userName": payload01.user_name,
	"fullName": payload01.full_name,
	"age" : presentYear - payload01.birthday.year
			when presentMonth >= payload01.birthday.month and presentDay >= payload01.birthday.day
			otherwise presentYear - payload01.birthday.year - 1,
	"gender": "Male" when payload01.gender == 'M' otherwise "Female",
	"dateRegistered": payload01.date_registered as :datetime {format: "dd-MM-yyyy"}
	})]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <choice-exception-strategy name="implementationChoice_Exception_Strategy">
        <catch-exception-strategy doc:name="Catch Exception Strategy">
        	<set-payload value="{
   &quot;message&quot;:&quot;system error&quot;,
   &quot;errorCode&quot;: 500
}" doc:name="Set Payload"/>
            <set-property propertyName="http.status" value="500" doc:name="Property"/>
      
          </catch-exception-strategy>
    </choice-exception-strategy>
</mule>
